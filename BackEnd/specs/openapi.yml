openapi: 3.0.0

info:
  version: 1.0.0
  title: HostMyDocs
  description: a lightweight app to host your favourite documentation !
paths:
  /listProjects:
    get:
      operationId: listProjects
      description: Returns all the versions from all the languages from all the projects.
      responses:
        200:
          description: the project list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

  /addProject:
    post:
      operationId: addProject
      description: Add a given version of a project to the database
      security:
        - basicAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: Display name of the project
                  example: HostMyDocs
                  type: string
                language:
                  description: Programming language used in this version of the project
                  example: TypeScript
                  type: string
                version:
                  description: a version number that match SemVer specification
                  example: 2.0.0
                  type: string
                archive:
                  description: >-
                    a zip file containing all the documentation with at least an
                    index file
                  type: string
                  format: binary
              required:
                - name
                - language
                - version
                - archive
      responses:
        200:
          description: project was added successfully
        400:
          description: one or more parameters are invalid
        401:
          description: provided password is wrong

  /deleteProject:
    delete:
      operationId: deleteProject
      description: >-
        Delete a given language for a version of a project to the database, have
        differents behavior if some parameters are empty (i.e. "") (look at
        parameters description for more)
      security:
        - basicAuth: []
      responses:
        200:
          description: project was deleted successfully
        400:
          description: one or more parameters are invalid
        401:
          description: provided password is wrong
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: 'Display name of the project, cannot be empty'
                  type: string
                  example: HostMyDocs
                language:
                  description: >-
                    Programming language used in this version of the project, if
                    empty delete all languages for this version
                  type: string
                  example: TypeScript
                version:
                  description: >-
                    a version number that match SemVer specification, if empty
                    delete the whole project (cannot be empty if language is not
                    empty)
                  type: string
                  example: 1.0.0
              required:
                - name
                - language
                - version

components:
  securitySchemes:
    basicAuth:
      type: http
      description: HTTP Basic Authentication. Works on `HTTPS` only
      scheme: basic
  schemas:
    Project:
      type: object
      properties:
        name:
          type: string
          description: Display name of the project
          example: HostMyDocs
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
    Version:
      type: object
      properties:
        number:
          type: string
          description: A version number that matches SemVer
          example: 1.0.0
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
    Language:
      type: object
      properties:
        name:
          type: string
          description: name of the programming language
          example: TypeScript
        index:
          type: string
          example: /data/docs/HostMyDocs/index.html
          description: >-
            an host-relative path to the index.html file of the documentation
            for a given version in a given project
